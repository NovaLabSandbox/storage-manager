openapi: 3.1.1
info:
  title: StorageManager Management API
  description: API for managing sites, including areas, modules, and devices.
  version: 1.0.0
servers:
  - url: http://localhost:5000/api
    description: Development server
tags:
  - name: Site
    description: Operations related to top level site.
  - name: Area
    description: Operations related to areas within sites.
  - name: Module
    description: Operations related to modules within areas.
  - name: Device
    description: Operations related to devices within sites, areas, and modules.

paths:
  /site:
    get:
      summary: Get all sites
      tags:
        - Site
      operationId: getAllSites
      responses:
        '200':
          description: Successfully retrieved all sites
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SiteResponse'
        '500':
          description: Internal server error
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      summary: Create a new site
      tags:
        - Site
      operationId: createSite
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiteCreateRequest'
      responses:
        '201':
          description: Site successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteResponse'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error

  /site/{siteId}:
    get:
      summary: Get a single site by ID
      tags:
        - Site
      operationId: getSiteById
      parameters:
        - name: siteId
          in: path
          required: true
          description: The ID of the site
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved site
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteResponse'
        '404':
          description: Site not found
        '500':
          description: Internal server error
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    put:
      summary: Update an existing site
      tags:
        - Site
      operationId: updateSite
      parameters:
        - name: siteId
          in: path
          required: true
          description: The ID of the site to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiteUpdateRequest'
      responses:
        '200':
          description: Successfully updated site
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteResponse'
        '400':
          description: Bad request
        '404':
          description: Site not found
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
    delete:
      summary: Delete a site by ID
      tags:
        - Site
      operationId: deleteSite
      parameters:
        - name: siteId
          in: path
          required: true
          description: The ID of the site to delete
          schema:
            type: string
      responses:
        '200':
          description: Successfully deleted site
        '404':
          description: Site not found
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error

  /site/{siteId}/area:
    get:
      summary: Get all areas of a site
      tags:
        - Area
      operationId: getAllAreas
      parameters:
        - $ref: '#/components/parameters/SiteId'
      responses:
        '200':
          description: A list of areas in the site
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AreaResponse'
        '404':
          description: Site not found
        '500':
          description: Internal server error
    post:
      summary: Create a new area in the site
      tags:
        - Area
      operationId: createArea
      parameters:
        - $ref: '#/components/parameters/SiteId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAreaRequest'
      responses:
        '201':
          description: Area created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AreaResponse'
        '404':
          description: Site not found
        '500':
          description: Internal server error

  /site/{siteId}/area/{areaId}:
    get:
      summary: Get details of a specific area in a site
      tags:
        - Area
      operationId: getAreaById
      parameters:
        - $ref: '#/components/parameters/SiteId'
        - $ref: '#/components/parameters/AreaId'
      responses:
        '200':
          description: Area details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AreaResponse'
        '404':
          description: Area or Site not found
        '500':
          description: Internal server error
    put:
      summary: Update an area in the site
      tags:
        - Area
      operationId: updateArea
      parameters:
        - $ref: '#/components/parameters/SiteId'
        - $ref: '#/components/parameters/AreaId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAreaRequest'
      responses:
        '200':
          description: Area updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AreaResponse'
        '404':
          description: Area or Site not found
        '500':
          description: Internal server error
    delete:
      summary: Delete an area from the site
      tags:
        - Area
      operationId: deleteArea
      parameters:
        - $ref: '#/components/parameters/SiteId'
        - $ref: '#/components/parameters/AreaId'
      responses:
        '200':
          description: Area deleted successfully
        '404':
          description: Area or Site not found
        '500':
          description: Internal server error

  /site/{siteId}/device:
    get:
      summary: Get all devices of a site
      tags:
        - Site
      operationId: getAllDevices
      parameters:
        - $ref: '#/components/parameters/SiteId'
      responses:
        '200':
          description: A list of devices in the site
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceResponse'
        '404':
          description: Site not found
        '500':
          description: Internal server error
    post:
      summary: Create a new device in the site
      tags:
        - Site
      operationId: createDevice
      parameters:
        - $ref: '#/components/parameters/SiteId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDeviceRequest'
      responses:
        '201':
          description: Device created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceResponse'
        '404':
          description: Site not found
        '500':
          description: Internal server error

  /site/{siteId}/device/{deviceId}:
    get:
      summary: Get details of a specific device in a site
      tags:
        - Site
      operationId: getDeviceById
      parameters:
        - $ref: '#/components/parameters/SiteId'
        - $ref: '#/components/parameters/DeviceId'
      responses:
        '200':
          description: Device details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceResponse'
        '404':
          description: Device or Site not found
        '500':
          description: Internal server error
    put:
      summary: Update a device in the site
      tags:
        - Site
      operationId: updateDevice
      parameters:
        - $ref: '#/components/parameters/SiteId'
        - $ref: '#/components/parameters/DeviceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDeviceRequest'
      responses:
        '200':
          description: Device updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceResponse'
        '404':
          description: Device or Site not found
        '500':
          description: Internal server error
    delete:
      summary: Delete a device from the site
      tags:
        - Site
      operationId: deleteDevice
      parameters:
        - $ref: '#/components/parameters/SiteId'
        - $ref: '#/components/parameters/DeviceId'
      responses:
        '200':
          description: Device deleted successfully
        '404':
          description: Device or Site not found
        '500':
          description: Internal server error

  /site/{siteId}/area/{areaId}/module:
    get:
      summary: Get all modules of an area
      tags:
        - Module
      operationId: getAllModules
      parameters:
        - $ref: '#/components/parameters/SiteId'
        - $ref: '#/components/parameters/AreaId'
      responses:
        '200':
          description: A list of modules in the area
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ModuleResponse'
        '404':
          description: Site or Area not found
        '500':
          description: Internal server error
    post:
      summary: Create a new module in the area
      tags:
        - Module
      operationId: createModule
      parameters:
        - $ref: '#/components/parameters/SiteId'
        - $ref: '#/components/parameters/AreaId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateModuleRequest'
      responses:
        '201':
          description: Module created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModuleResponse'
        '404':
          description: Site or Area not found
        '500':
          description: Internal server error

  /site/{siteId}/area/{areaId}/module/{moduleId}:
    get:
      summary: Get details of a specific module in an area
      tags:
        - Module
      operationId: getModuleById
      parameters:
        - $ref: '#/components/parameters/SiteId'
        - $ref: '#/components/parameters/AreaId'
        - $ref: '#/components/parameters/ModuleId'
      responses:
        '200':
          description: Module details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModuleResponse'
        '404':
          description: Module, Area, or Site not found
        '500':
          description: Internal server error
    put:
      summary: Update a module in the area
      tags:
        - Module
      operationId: updateModule
      parameters:
        - $ref: '#/components/parameters/SiteId'
        - $ref: '#/components/parameters/AreaId'
        - $ref: '#/components/parameters/ModuleId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateModuleRequest'
      responses:
        '200':
          description: Module updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModuleResponse'
        '404':
          description: Module, Area, or Site not found
        '500':
          description: Internal server error
    delete:
      summary: Delete a module from the area
      tags:
        - Module
      operationId: deleteModule
      parameters:
        - $ref: '#/components/parameters/SiteId'
        - $ref: '#/components/parameters/AreaId'
        - $ref: '#/components/parameters/ModuleId'
      responses:
        '200':
          description: Module deleted successfully
        '404':
          description: Module, Area, or Site not found
        '500':
          description: Internal server error

  /site/{siteId}/area/{areaId}/device:
    get:
      summary: Get all devices of an area
      tags:
        - Area
      operationId: getAllDevicesInArea
      parameters:
        - $ref: '#/components/parameters/SiteId'
        - $ref: '#/components/parameters/AreaId'
      responses:
        '200':
          description: A list of devices in the area
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceResponse'
        '404':
          description: Site or Area not found
        '500':
          description: Internal server error
    post:
      summary: Create a new device in the area
      tags:
        - Area
      operationId: createDeviceInArea
      parameters:
        - $ref: '#/components/parameters/SiteId'
        - $ref: '#/components/parameters/AreaId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDeviceRequest'
      responses:
        '201':
          description: Device created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceResponse'
        '404':
          description: Site or Area not found
        '500':
          description: Internal server error

  /site/{siteId}/area/{areaId}/device/{deviceId}:
    get:
      summary: Get details of a specific device in an area
      tags:
        - Area
      operationId: getDeviceByIdInArea
      parameters:
        - $ref: '#/components/parameters/SiteId'
        - $ref: '#/components/parameters/AreaId'
        - $ref: '#/components/parameters/DeviceId'
      responses:
        '200':
          description: Device details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceResponse'
        '404':
          description: Device, Area, or Site not found
        '500':
          description: Internal server error
    put:
      summary: Update a device in the area
      tags:
        - Area
      operationId: updateDeviceInArea
      parameters:
        - $ref: '#/components/parameters/SiteId'
        - $ref: '#/components/parameters/AreaId'
        - $ref: '#/components/parameters/DeviceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDeviceRequest'
      responses:
        '200':
          description: Device updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceResponse'
        '404':
          description: Device, Area, or Site not found
        '500':
          description: Internal server error
    delete:
      summary: Delete a device from the area
      tags:
        - Area
      operationId: deleteDeviceFromArea
      parameters:
        - $ref: '#/components/parameters/SiteId'
        - $ref: '#/components/parameters/AreaId'
        - $ref: '#/components/parameters/DeviceId'
      responses:
        '200':
          description: Device deleted successfully
        '404':
          description: Device, Area, or Site not found
        '500':
          description: Internal server error

  /site/{siteId}/area/{areaId}/module/{moduleId}/device:
    get:
      summary: Get all devices in a module
      operationId: Module_GetAllDevices
      tags:
        - Module
      parameters:
        - $ref: "#/components/parameters/SiteId"
        - $ref: "#/components/parameters/AreaId"
        - $ref: "#/components/parameters/ModuleId"
      responses:
        "200":
          description: A list of devices in the module
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DeviceResponse"
        '404':
          description: Site or Area not found
        '500':
          description: Internal server error
    post:
      summary: Create a new device in a module
      operationId: Module_CreateDevice
      tags:
        - Module
      parameters:
        - $ref: "#/components/parameters/SiteId"
        - $ref: "#/components/parameters/AreaId"
        - $ref: "#/components/parameters/ModuleId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDeviceRequest"
      responses:
        "201":
          description: Device created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceResponse"
        '404':
          description: Site or Area not found
        '500':
          description: Internal server error

  /site/{siteId}/area/{areaId}/module/{moduleId}/device/{deviceId}:
    get:
      summary: Get details of a specific device in a module
      operationId: Module_GetDevice
      tags:
        - Module
      parameters:
        - $ref: "#/components/parameters/SiteId"
        - $ref: "#/components/parameters/AreaId"
        - $ref: "#/components/parameters/ModuleId"
        - $ref: "#/components/parameters/DeviceId"
      responses:
        "200":
          description: Details of the device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceResponse"
        '404':
          description: Site or Area not found
        '500':
          description: Internal server error
    put:
      summary: Update a device in a module
      operationId: Module_UpdateDevice
      tags:
        - Module
      parameters:
        - $ref: "#/components/parameters/SiteId"
        - $ref: "#/components/parameters/AreaId"
        - $ref: "#/components/parameters/ModuleId"
        - $ref: "#/components/parameters/DeviceId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDeviceRequest"
      responses:
        "200":
          description: Device updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceResponse"
        '404':
          description: Site or Area not found
        '500':
          description: Internal server error
    delete:
      summary: Delete a device in a module
      operationId: Module_DeleteDevice
      tags:
        - Module
      parameters:
        - $ref: "#/components/parameters/SiteId"
        - $ref: "#/components/parameters/AreaId"
        - $ref: "#/components/parameters/ModuleId"
        - $ref: "#/components/parameters/DeviceId"
      responses:
        "204":
          description: Device deleted successfully
        '404':
          description: Site or Area not found
        '500':
          description: Internal server error

  /device:
    get:
      summary: Get all devices
      operationId: Device_GetAll
      tags:
        - Device
      responses:
        "200":
          description: List of all devices
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DeviceResponse"
        "500":
          description: Internal Server Error
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
    post:
      summary: Create a new device
      operationId: Device_Create
      tags:
        - Device
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDeviceRequest"
      responses:
        "201":
          description: Device created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceResponse"
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
        "401":
          description: Unauthorized
        "403":
          description: Forbidden

  /device/{deviceId}:
    get:
      summary: Get details of a specific device
      operationId: Device_GetOne
      tags:
        - Device
      parameters:
        - $ref: "#/components/parameters/DeviceId"
      responses:
        "200":
          description: Details of the device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceResponse"
        "404":
          description: Device not found
        "500":
          description: Internal Server Error
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
    put:
      summary: Update a specific device
      operationId: Device_Update
      tags:
        - Device
      parameters:
        - $ref: "#/components/parameters/DeviceId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDeviceRequest"
      responses:
        "200":
          description: Device updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceResponse"
        "400":
          description: Bad Request
        "404":
          description: Device not found
        "500":
          description: Internal Server Error
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
    delete:
      summary: Delete a specific device
      operationId: Device_Delete
      tags:
        - Device
      parameters:
        - $ref: "#/components/parameters/DeviceId"
      responses:
        "204":
          description: Device deleted successfully
        "404":
          description: Device not found
        "500":
          description: Internal Server Error
        "401":
          description: Unauthorized
        "403":
          description: Forbidden

components:
  parameters:
    SiteId:
      name: siteId
      in: path
      required: true
      schema:
        type: string
    AreaId:
      name: areaId
      in: path
      required: true
      schema:
        type: string
    ModuleId:
      name: moduleId
      in: path
      required: true
      schema:
        type: string
    DeviceId:
      name: deviceId
      in: path
      required: true
      schema:
        type: string

  schemas:
    SiteResponse:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the site
        name:
          type: string
          description: The name of the site
        description:
          type: string
          description: A brief description of the site
        numberOfAreas:
          type: integer
          description: The number of areas within the site
        numberOfModules:
          type: integer
          description: The number of modules within the site
        numberOfDevices:
          type: integer
          description: The total number of devices associated with the site

    SiteCreateRequest:
      type: object
      properties:
        name:
          type: string
          description: The name of the site
        description:
          type: string
          description: A brief description of the site
      required:
        - name

    SiteUpdateRequest:
      type: object
      properties:
        name:
          type: string
          description: The updated name of the site
        description:
          type: string
          description: The updated description of the site

    AreaResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string

    CreateAreaRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    
    UpdateAreaRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    
    DeviceResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        description:
          type: string

    CreateDeviceRequest:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        description:
          type: string

    UpdateDeviceRequest:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        description:
          type: string

    ModuleResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string

    CreateModuleRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string

    UpdateModuleRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string